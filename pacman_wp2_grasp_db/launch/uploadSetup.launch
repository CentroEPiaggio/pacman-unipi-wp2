<launch>

	<!-- #### -->

	<arg name="hand_name" default="hand"/>

	<!-- #### -->

    <!-- Flexiforce Glove and hand visualization -->
	<node name="joint_state_publisher" pkg="joint_state_publisher" type="joint_state_publisher">
            <param name="use_gui" value="false"/>
            <rosparam param="source_list">[/flexiforce/joint_states]</rosparam>
    </node>

    <param name="robot_description" command="$(find xacro)/xacro.py $(find pacman_wp2_db)/urdf/hand.urdf.xacro name:=$(arg hand_name)" />
	<node name="hand_state_publisher" pkg="robot_state_publisher" type="robot_state_publisher"/>

	<include file="$(find flexiforce_glove)/launch/flexiforce_glove.launch">
		<arg name="isBoardConnected" default="true"/>
		<arg name="hand_name" default="$(arg hand_name)"/>
		<arg name="port" default="/dev/ttyACM0"/>
		<arg name="baud" default="115200"/>
	</include>

	<!-- Phase Space and object tracking -->
	<!-- this node already activates the phase space -->
	<include file="$(find phase_space)/launch/track_object.launch">
     	<arg name="object" value="hand" />
     	<arg name="turn_rviz_on" value="False"/>
    	<arg name="turn_phase_space_on" value="True"/>
	</include>
	<include file="$(find phase_space)/launch/track_object.launch">
     	<arg name="object" value="star" />
     	<arg name="turn_rviz_on" value="False"/>
    	<arg name="turn_phase_space_on" value="False"/> <!-- previous node already start the system -->
	</include>

	<!-- Asus sensor with filtering, this will load openni and intrinsics (assuming asus2 is connected in phase space lab)-->
  <include file="$(find scene_filter_node)/launch/scene_filter_phase_space.launch" />

	<!-- take only half messages from point clouds -->
  <node name="point_cloud_dropper" pkg="topic_tools" type="drop" args="/scene_filter/scene 8 10 /cloud_stream"/>
	<!-- take only half messages from rgb stream -->
  <node name="video_dropper" pkg="topic_tools" type="drop" args="/camera/image_raw 8 10 /video_stream"/>

	<!-- Include the results from calibration -->
	<include file="$(find calibration)/launch/asus_phase_space_broadcaster.launch"/>
	<include file="$(find calibration)/launch/tracker_object_broadcaster.launch"/>

	<!-- Data synchronizer -->

	<!-- customized rviz for the experiment -->
	<node name="viz" pkg="rviz" type="rviz" respawn="false" args="-d $(find pacman_wp2_db)/launch/config.rviz" output="screen"/>

</launch>
